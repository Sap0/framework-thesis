name: Terraform Deployment

on:
  push:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Check if resourcegroup for states exists and set it if empty
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
          SECRET_NAME: "TF_RESOURCE_GROUP"
          SECRET_VALUE: "resourcegroupstates"
        run: |
          response=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
                          -H "Accept: application/vnd.github.v3+json" \
                          "https://api.github.com/repos/${{ github.repository }}/actions/secrets/$SECRET_NAME")

          if echo "$response" | grep -q "Not Found"; then
            echo "Secret $SECRET_NAME does not exist. Creating it now."
            secret_exists=false
          else
            echo "Secret $SECRET_NAME exists. Checking if empty..."
            secret_exists=true
          fi

          if [ "$secret_exists" = false ] || [ -z "$(echo "$response" | jq -r '.value')" ]; then
            echo "Updating secret $SECRET_NAME with default value."
            encrypted_value=$(echo -n "$SECRET_VALUE" | base64)
            curl -X PUT -H "Authorization: token $GITHUB_TOKEN" \
                -H "Accept: application/vnd.github.v3+json" \
                https://api.github.com/repos/${{ github.repository }}/actions/secrets/$SECRET_NAME \
                -d "{\"encrypted_value\":\"$encrypted_value\",\"visibility\":\"all\"}"
          else
            echo "Secret $SECRET_NAME already set."
          fi
          
      - name: Check if storageaccount for states exists and set it if empty
        env:
            GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
            SECRET_NAME: "TF_STORAGE_ACCOUNT"
            SECRET_VALUE: "storageaccountstates"
        run: |
            response=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
                            -H "Accept: application/vnd.github.v3+json" \
                            "https://api.github.com/repos/${{ github.repository }}/actions/secrets/$SECRET_NAME")
  
            if echo "$response" | grep -q "Not Found"; then
              echo "Secret $SECRET_NAME does not exist. Creating it now."
              secret_exists=false
            else
              echo "Secret $SECRET_NAME exists. Checking if empty..."
              secret_exists=true
            fi
  
            if [ "$secret_exists" = false ] || [ -z "$(echo "$response" | jq -r '.value')" ]; then
              echo "Updating secret $SECRET_NAME with default value."
              encrypted_value=$(echo -n "$SECRET_VALUE" | base64)
              curl -X PUT -H "Authorization: token $GITHUB_TOKEN" \
                  -H "Accept: application/vnd.github.v3+json" \
                  https://api.github.com/repos/${{ github.repository }}/actions/secrets/$SECRET_NAME \
                  -d "{\"encrypted_value\":\"$encrypted_value\",\"visibility\":\"all\"}"
            else
              echo "Secret $SECRET_NAME already set."
            fi

      - name: Check and create Azure resources if needed
        run: |
          RESOURCE_GROUP="${{ secrets.TF_RESOURCE_GROUP }}"
          STORAGE_ACCOUNT="${{ secrets.TF_STORAGE_ACCOUNT }}"
          CONTAINER_NAME="tfstate"

          echo "TF_RESOURCE_GROUP=$RESOURCE_GROUP" >> $GITHUB_ENV
          echo "TF_STORAGE_ACCOUNT=$STORAGE_ACCOUNT" >> $GITHUB_ENV

          echo "Verifying Resource Group: $RESOURCE_GROUP"
          if ! az group show --name $RESOURCE_GROUP &>/dev/null; then
            echo "Resource Group does not exist. Creating..."
            az group create --name $RESOURCE_GROUP --location "East US"
          else
            echo "Resource Group exists."
          fi

          echo "Verifying Storage Account: $STORAGE_ACCOUNT"
          if ! az storage account show --name $STORAGE_ACCOUNT --resource-group $RESOURCE_GROUP &>/dev/null; then
            echo "Storage Account does not exist. Creating..."
            az storage account create --name $STORAGE_ACCOUNT --resource-group $RESOURCE_GROUP --sku Standard_LRS
          else
            echo "Storage Account exists."
          fi

          echo "Verifying Storage Container: $CONTAINER_NAME"
          if ! az storage container show --name $CONTAINER_NAME --account-name $STORAGE_ACCOUNT &>/dev/null; then
            echo "Storage Container does not exist. Creating..."
            az storage container create --name $CONTAINER_NAME --account-name $STORAGE_ACCOUNT
          else
            echo "Storage Container exists."
          fi

          STORAGE_KEY=$(az storage account keys list --account-name $STORAGE_ACCOUNT --query '[0].value' --output tsv)

          echo "TF_STORAGE_KEY=$STORAGE_KEY" >> $GITHUB_ENV

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="resource_group_name=${{ secrets.TF_RESOURCE_GROUP }}" \
            -backend-config="storage_account_name=${{ secrets.TF_STORAGE_ACCOUNT }}" \
            -backend-config="container_name=tfstate" \
            -backend-config="key=terraform.tfstate" \
            -backend-config="access_key=$TF_STORAGE_KEY"

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
